# https://hub.docker.com/r/library/node/tags/
# we are using carbon
image: node:16.15.1-stretch-slim
# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
#AWS access keys stored as secret variables
#variables:
#  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
#  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
#This declares the pipeline stages

include:
  - project: "trust/gitlab/templates"
    file: "SAST.gitlab-ci.yml"
  - project: "trust/gitlab/templates"
    file: "Secret-Detection.gitlab-ci.yml"
  - project: "trust/gitlab/templates"
    file: "Dependency-Scanning.gitlab-ci.yml"

stages:
  - test
  - build-plugin
  - build-example-app
  - publish-pages

variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"

cache:
  key: "${CI_PROJECT_NAME}"
  paths:
    - .npm

before_script:
  - npm config set registry=https://artifactory.in.here.com/artifactory/api/npm/here-node
  - npm ci --cache .npm --prefer-offline --legacy-peer-deps

# --------------
# Rules
# --------------

# RULE : For HEAD or Master branch
.rules-master: &rules-master
  rules:
    - if: "$CI_COMMIT_TAG =~ /^release-.*/"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master"'

# --------------
# SECURITY TEST
# --------------

gemnasium-dependency_scanning:
  stage: test
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json
  <<: *rules-master

kics-iac-sast:
  stage: test
  artifacts:
    reports:
      sast: gl-sast-report.json
  <<: *rules-master

nodejs-scan-sast:
  stage: test
  artifacts:
    reports:
      sast: gl-sast-report.json
  <<: *rules-master

semgrep-sast:
  stage: test
  artifacts:
    reports:
      sast: gl-sast-report.json
  <<: *rules-master

secret_detection:
  stage: test
  variables:
    GIT_DEPTH: 100
  artifacts:
    reports:
      secret_detection: gl-secret-detection-report.json
  <<: *rules-master

# --------------
# BUILD LIB
# --------------

unit_tests-and-build:
  stage: build-plugin
  only:
    - master
    - merge_requests
  artifacts:
    when: always
    paths:
      - coverage/
      - lib/
      - example/
    reports:
      junit:
        - coverage/clover.xml
  script:
    - npm run test
    - npm run build
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/

# --------------
# BUILD EXAMPLE
# --------------

build_app:
  stage: build-example-app
  only:
    - master
    - merge_requests
  artifacts:
    when: always
    paths:
      - example/build
      - coverage
  script:
    - cd example/
    - npm ci --legacy-peer-deps
    - cd ../
    - npm link ./example/node_modules/react --legacy-peer-deps
    - npm run test
    - cd example/
    - npm run build
  dependencies:
    - unit_tests-and-build

# --------------
# BUILD EXAMPLE
# --------------

pages:
  stage: publish-pages
  allow_failure: true
  when: always
  only:
    - master
    - merge_requests
  artifacts:
    when: always
    paths:
      - public/
    expire_in: 30 days
  script:
    - rm -rf public/
    - mv example/build/ public/
    # Check if everything is working great
    - ls -al public
  dependencies:
    - build_app
